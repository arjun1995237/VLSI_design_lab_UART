|receiver
clk1 => clk1.IN1
RX => next_state.OUTPUTSELECT
RX => next_state.OUTPUTSELECT
RX => dout[7]~reg0.DATAIN
RX => dout[6]~reg0.DATAIN
RX => dout[5]~reg0.DATAIN
RX => dout[4]~reg0.DATAIN
RX => dout[3]~reg0.DATAIN
RX => dout[2]~reg0.DATAIN
RX => dout[1]~reg0.DATAIN
RX => dout[0]~reg0.DATAIN
RX => Selector0.IN2
RX => Selector0.IN3
RX => Selector3.IN2
RX => Selector1.IN1
reset => present_state.OUTPUTSELECT
reset => present_state.OUTPUTSELECT
reset => present_state.OUTPUTSELECT
reset => present_state.OUTPUTSELECT
valid_frame <= Selector3.DB_MAX_OUTPUT_PORT_TYPE
dout[0] <= dout[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[1] <= dout[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[2] <= dout[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[3] <= dout[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[4] <= dout[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[5] <= dout[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[6] <= dout[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[7] <= dout[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|receiver|counter_rx:DUT2
clr_count => count.OUTPUTSELECT
clr_count => count.OUTPUTSELECT
clr_count => count.OUTPUTSELECT
clr_count => count.OUTPUTSELECT
clr_count => bit_count.OUTPUTSELECT
clr_count => bit_count.OUTPUTSELECT
clr_count => bit_count.OUTPUTSELECT
clr_count => bit_count.OUTPUTSELECT
clk1 => bit_count[0]~reg0.CLK
clk1 => bit_count[1]~reg0.CLK
clk1 => bit_count[2]~reg0.CLK
clk1 => bit_count[3]~reg0.CLK
clk1 => count[0]~reg0.CLK
clk1 => count[1]~reg0.CLK
clk1 => count[2]~reg0.CLK
clk1 => count[3]~reg0.CLK
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
bit_count[0] <= bit_count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
bit_count[1] <= bit_count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
bit_count[2] <= bit_count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
bit_count[3] <= bit_count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE


